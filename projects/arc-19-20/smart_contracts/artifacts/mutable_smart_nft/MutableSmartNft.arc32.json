{
    "hints": {
        "create_application(string,uint64,uint64[])void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "apply_for_nft(account,string,string,string,byte[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMubXV0YWJsZV9zbWFydF9uZnQuY29udHJhY3QuTXV0YWJsZVNtYXJ0TmZ0LmNsZWFyX3N0YXRlX3Byb2dyYW06CiAgICAvLyBzbWFydF9jb250cmFjdHMvbXV0YWJsZV9zbWFydF9uZnQvY29udHJhY3QucHk6MTM1CiAgICAvLyBjbGFzcyBNdXRhYmxlU21hcnROZnQoQVJDMjBDb250cmFjdCk6CiAgICBpbnQgMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 2,
            "num_uints": 1
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "counter": {
                    "type": "uint64",
                    "key": "counter"
                },
                "criterias": {
                    "type": "bytes",
                    "key": "criterias"
                },
                "name": {
                    "type": "bytes",
                    "key": "name"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "MutableSmartNft",
        "methods": [
            {
                "name": "create_application",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    },
                    {
                        "type": "uint64",
                        "name": "counter"
                    },
                    {
                        "type": "uint64[]",
                        "name": "criterias"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "apply_for_nft",
                "args": [
                    {
                        "type": "account",
                        "name": "reserve_address"
                    },
                    {
                        "type": "string",
                        "name": "url_template"
                    },
                    {
                        "type": "string",
                        "name": "asset_name"
                    },
                    {
                        "type": "string",
                        "name": "unit_name"
                    },
                    {
                        "type": "byte[]",
                        "name": "metadata_hash"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}